<?xml version="1.0" encoding="UTF-8"?>

<!--build.xml generated by maven from project.xml version 0.2.0
  on date January 2 2004, time 1343-->

<!--This maven-generated build.xml is subsequently patched adding source=1.4
    flags to javac and javadocs targets and preventing the  maven download
    of jars instead using the content of the lib dir.
    
    Note the 'dist' target is dependent on 'test' target. To run the test
    target, you'll need to satisfy a junit ant task dependency. The junit jar
    needs to be in SAME location as the ant optional.jar that contains the
    junit ant task.  See http://ant.apache.org/manual/OptionalTasks/junit.html.
    Since we do not supply a build.sh script expecting the developer to have 
    ant installed, the developer will need to take care of resolving the junit
    dependency for their ant install before they can run the 'test' target or 
    the subsequent 'dist' target.
 -->

<project default="jar" name="heritrix" basedir=".">

    <property name="noget" value="false" />
    <property name="src.libdir" value="lib" />
    <target name="help">
        <echo message="Type 'ant -projecthelp' for more info." />  
    </target>

  <property name="defaulttargetdir" value="target">
  </property>
  <property name="libdir" value="target/lib">
  </property>
  <property name="classesdir" value="target/classes">
  </property>
  <property name="testclassesdir" value="target/test-classes">
  </property>
  <property name="testreportdir" value="target/test-reports">
  </property>
  <property name="distdir" value="dist">
  </property>
  <property name="javadocdir" value="dist/docs/api">
  </property>
  <property name="final.name" value="heritrix-0.2.0">
  </property>
  <target name="init" description="o Initializes some properties">
    <mkdir dir="${libdir}">
    </mkdir>
    <condition property="noget">
      <equals arg2="only" arg1="${build.sysclasspath}">
      </equals>
    </condition>
    <copy todir="${libdir}" >
      <fileset dir="${src.libdir}">
        <include name="*.jar">
        </include>
      </fileset>
    </copy>
  </target>
  <target name="compile" description="o Compile the code" depends="get-deps">
    <mkdir dir="${classesdir}">
    </mkdir>
    <javac destdir="${classesdir}" deprecation="true" debug="true"
        optimize="false" excludes="**/package.html" source="1.4">
      <src>
        <pathelement location="src/java">
        </pathelement>
      </src>
      <classpath>
        <fileset dir="${libdir}">
          <include name="*.jar">
          </include>
        </fileset>
      </classpath>
    </javac>
    <copy todir="${classesdir}">
      <fileset dir="src/conf">
        <include name="*.properties">
        </include>
      </fileset>
    </copy>
  </target>
  <target name="jar" description="o Create the jar" depends="compile,test">
    <jar jarfile="target/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}">
        <manifest>
            <attribute name="Main-Class" value="org.archive.crawler.Heritrix"/>
            <attribute name="Class-Path" value="lib/ant-1.5.4 lib/commons-logging-1.0.3.jar lib/dnsjava-1.5.0.jar lib/httpclient-20031002.jar lib/itext-1.0.0.jar lib/jasper-compiler-tomcat-4.1.24.jar lib/jasper-runtime-tomcat-4.1.24.jar lib/javaswf-CVS-SNAPSHOT-1.jar lib/servlet-2.3.jar lib/jmxri-4.2.15rc0.jar lib/jmxtools-4.2.15rc0.jar lib/junit-3.8.1.jar lib/org.mortbay.jetty-4.2.15rc0.jar lib/org.mortbay.jmx-4.2.15rc0.jar lib/poi-scratchpad-2.0-RC1-20031102.jar lib/stataclasses-0.1.0.jar"/>
        </manifest>
    </jar>
  </target>
  <target name="clean" description="o Clean up the generated directories">
    <delete dir="${defaulttargetdir}">
    </delete>
    <delete dir="${distdir}">
    </delete>
  </target>
  <target name="dist" description="o Create a distribution" depends="jar, javadoc">
    <mkdir dir="dist">
    </mkdir>
    <copy todir="dist">
      <fileset dir="${defaulttargetdir}" includes="*.jar">
      </fileset>
      <fileset dir="${basedir}" includes="LICENSE*, README*">
      </fileset>
    </copy>
    <copy todir="dist/lib" >
        <fileset dir="lib" />
    </copy>
    <copy todir="dist/webapps">
        <fileset dir="src/webapps" />
    </copy>
    <copy todir="dist/bin">
        <fileset dir="src/shell" />
   </copy>
  </target>
  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
    <fail message="There were test failures.">
    </fail>
  </target>
  <target name="internal-test" depends="compile-tests">
    <mkdir dir="${testreportdir}">
    </mkdir>
    <junit dir="./" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
      <sysproperty key="basedir" value=".">
      </sysproperty>
      <formatter type="xml">
      </formatter>
      <formatter usefile="false" type="plain">
      </formatter>
      <classpath>
        <fileset dir="${libdir}">
          <include name="*.jar">
          </include>
        </fileset>
        <pathelement path="${testclassesdir}">
        </pathelement>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
      <batchtest todir="${testreportdir}">
        <fileset dir="src/java">
          <include name="**/*Test.java">
          </include>
          <exclude name="**/NaughtyTest.java">
          </exclude>
        </fileset>
      </batchtest>
    </junit>
  </target>
  <target name="compile-tests" depends="compile">
    <mkdir dir="${testclassesdir}">
    </mkdir>
    <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html" source="1.4">
      <src>
        <pathelement location="src/java">
        </pathelement>
      </src>
      <classpath>
        <fileset dir="${libdir}">
          <include name="*.jar">
          </include>
        </fileset>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
    </javac>
  </target>
  <target name="javadoc" description="o Generate javadoc" depends="jar" >
    <mkdir dir="${javadocdir}">
    </mkdir>
    <tstamp>
      <format pattern="2003-yyyy" property="year">
      </format>
    </tstamp>
    <property name="copyright" value="Copyright &amp;copy;  Internet Archive. All Rights Reserved.">
    </property>
    <property name="title" value="Heritrix 0.2.0 API">
    </property>
    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="src/java" packagenames="org.archive.*" source="1.4">
      <classpath>
        <fileset dir="${libdir}">
          <include name="*.jar">
          </include>
        </fileset>
        <pathelement location="target/${final.name}.jar">
        </pathelement>
      </classpath>
    </javadoc>
  </target>
  <target name="get-deps" unless="noget" depends="init">
    <get dest="${libdir}/commons-httpclient-2.0-rc2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-httpclient/jars/commons-httpclient-2.0-rc2.jar">
    </get>
    <get dest="${libdir}/commons-logging-1.0.3.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.3.jar">
    </get>
    <get dest="${libdir}/dnsjava-1.5.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/dnsjava/jars/dnsjava-1.5.jar">
    </get>
    <get dest="${libdir}/stataclasses-0.1.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/stataclasses/jars/stataclasses-0.1.0.jar">
    </get>
    <get dest="${libdir}/org.mortbay.jetty-4.2.15rc0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/org.mortbay.jetty/jars/org.mortbay.jetty-4.2.15rc0.jar">
    </get>
    <get dest="${libdir}/org.mortbay.jmx-4.2.15rc0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/org.mortbay.jmx/jars/org.mortbay.jmx-4.2.15rc0.jar">
    </get>
    <get dest="${libdir}/servlet-2.3.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/servlet/jars/servlet-2.3.jar">
    </get>
    <get dest="${libdir}/jasper-runtime-.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/jasper-runtime/jars/jasper-runtime-.jar">
    </get>
    <get dest="${libdir}/jasper-compiler-.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/jasper-compiler/jars/jasper-compiler-.jar">
    </get>
    <get dest="${libdir}/jmxri-.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/jmxri/jars/jmxri-.jar">
    </get>
    <get dest="${libdir}/jmxtools-.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/jmxtools/jars/jmxtools-.jar">
    </get>
    <get dest="${libdir}/poi-2.0-RC1-20031102.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/poi/jars/poi-2.0-RC1-20031102.jar">
    </get>
    <get dest="${libdir}/poi-scratchpad-2.0-RC1-20031102.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/poi-scratchpad/jars/poi-scratchpad-2.0-RC1-20031102.jar">
    </get>
    <get dest="${libdir}/javaswf-.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/javaswf/jars/javaswf-.jar">
    </get>
    <get dest="${libdir}/itext-1.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/itext/jars/itext-1.0.jar">
    </get>
    <get dest="${libdir}/ant-1.5.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/ant/jars/ant-1.5.4.jar">
    </get>
    <get dest="${libdir}/junit-3.8.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/junit/jars/junit-3.8.1.jar">
    </get>
    <get dest="${libdir}/junit-3.8.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/junit/jars/junit-3.8.1.jar">
    </get>
    <get dest="${libdir}/ant-1.5.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/ant/jars/ant-1.5.jar">
    </get>
    <get dest="${libdir}/ant-optional-1.5.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/ant/jars/ant-optional-1.5.jar">
    </get>
  </target>
  <target name="install-maven">
    <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true" src="${repo}/maven/maven-install-latest.jar">
    </get>
    <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar">
    </unjar>
  </target>
</project>
